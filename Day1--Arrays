
Set-Matrix-Zeros


Approach-1
1.we use two loops to travserse the matrix.
2.if we find '0' then we will set that entire row and column to -1 if it was not zero
3.at last replace all -1s with zeros

Tc - O(MN*(M+N))
Sc - O(1)

4.but this was a bad idea if then range of numbers in the range are from 2^-31 to 2^31


code-----------------------------------------------------------------
class Solution {
    public void setZeroes(int[][] matrix) {
        int n = matrix.length;
        int m = matrix[0].length;
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j] == 0){
                    for(int k=0;k<m;k++){
                        if(matrix[i][k]!=0)matrix[i][k]=Integer.MAX_VALUE;
                    }
                    for(int k=0;k<n;k++){
                        if(matrix[k][j]!=0)matrix[k][j]=Integer.MAX_VALUE;
                    }
                }
            }
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j] == Integer.MAX_VALUE)matrix[i][j]=0;
            }
        }
    }
}
-----------------------------------------------------------------------------------


Approach-2

1.we use two arrays in this case
2.one for rows and one for cols
3. if matrix[i][j] == 0 them set rows[i] = 1,cols[i]=1;
4.at last set entire matrix

Tc - O(MN)
sc - O(M+N)
----------------------------------------------------------------------------------------
class Solution {
    public void setZeroes(int[][] matrix) {
        int n = matrix.length;
        int m = matrix[0].length;
        
        int rows[] = new int[n];
        int cols[] = new int[m];
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j] == 0){
                    rows[i]=1;cols[j]=1;
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(rows[i] == 1 || cols[j] == 1)matrix[i][j] = 0;
            }
        }
        
    }
}
---------------------------------------------------------------------------------------

Approach-3

1.instead of using space we can use first row and column as our storage
2.use extra col variable to store oth column


------------------------------------------------------code-----------------------------------------------------------------------------------------------------------
class Solution {
    public void setZeroes(int[][] matrix) {
        int n = matrix.length;
        int m = matrix[0].length;
        
       int c = 1;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                 if(matrix[i][j] == 0){
                     
                     matrix[i][0] = 0;
                     
                     if(j == 0)c = 0;
                     else matrix[0][j] = 0;
                 }
                 
            }
        }
        //System.out.println(c);
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                if(matrix[i][0] == 0 || (matrix[0][j] == 0))matrix[i][j]=0;
            }
        }
        
        
        if(matrix[0][0] == 0){
            for(int i=0;i<m;i++)matrix[0][i] = 0;
        }
        if(c == 0){
            for(int i=0;i<n;i++)matrix[i][0] = 0;
        }
    }
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
