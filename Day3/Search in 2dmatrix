
Approach 1
1.lineraly traverse

Approach2(Geeks for Geeks and type II )
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length;
        int n = matrix[0].length;
        
        int l = 0;int r = n-1;
        
        while(l<m && r>=0){
            if(matrix[l][r] == target)return true;
            
            else if(matrix[l][r]>target)r--;
            else l++;
        }
        return false;
    }
}
Approach 3
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length;int n = matrix[0].length;
        int low  = 0;
        int high = n*m-1;
        
        while(low<=high){
            int mid = (low+high)>>1;
            int ri = mid/n;
            int ci = mid%n;
            if(matrix[ri][ci]>target)high = mid-1;
            else if(matrix[ri][ci]<target)low = mid+1;
            else return true;
        }
        
        return false;
    }
}
