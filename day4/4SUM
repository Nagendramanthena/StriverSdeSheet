Approach1
class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        HashSet<List<Integer>> ans = new HashSet<>();
        
        int n = nums.length;
        
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                HashMap<Long,Integer> hm = new HashMap<>();
                for(int k = j+1;k<n;k++){
                    long sum = (long)nums[i]+(long)nums[j];
                    sum += (long)nums[k];
                    long rem = (long)target-sum;
                    //System.out.println(rem);
                    if(hm.containsKey(rem)){
                        List<Integer> temp = new ArrayList<>();
                        temp.add(nums[i]);
                        temp.add(nums[j]);
                        temp.add(nums[k]);temp.add((int)rem);
                        Collections.sort(temp);ans.add(temp);
                    }
                    
                    hm.put((long)nums[k],1);
                }
            }
        }
        
        List<List<Integer>> fans = new ArrayList<>(ans);
        return fans;
    }
}


Approach2
class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        int n = nums.length;
        Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<>();
        for(int i=0;i<n;i++){
            if(i!=0 && nums[i] == nums[i-1])continue;
            for(int j=i+1;j<n;j++){
                if(j!=i+1 && nums[j] == nums[j-1])continue;
                int k = j+1;int l = n-1;
                while(k<l){
                    long sum = (long)nums[i]+(long)nums[j]+(long)nums[k]+(long)nums[l];
                    if(sum == target){
                        List<Integer> temp = new ArrayList<>();
                        temp.add(nums[i]);temp.add(nums[j]);temp.add(nums[k]);temp.add(nums[l]);
                        k++;
                        l--;
                        while(k<l && nums[k] == nums[k-1])k++;
                        while(k<l && nums[l] == nums[l+1])l--;
                        ans.add(temp);
                    }
                    else if(sum<target)k++;
                    else l--;
                }
            }
        }
        return ans;
    }
}
